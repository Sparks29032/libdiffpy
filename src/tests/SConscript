Import('env')

# Environment for building unit test driver
env_test = env.Clone(tools=['default', 'cxxtest'], CXXTEST_SUFFIX='.hpp')
lib_dir = Dir('#/').abspath
env_test.PrependUnique(LIBS='libsrreal', LIBPATH=lib_dir)
env_test.PrependENVPath('LD_LIBRARY_PATH', lib_dir)
env_test.AppendUnique(LIBS='libboost_python')

# Targets --------------------------------------------------------------------

# alltests -- the unit test driver
test_sources = []

# add all unit test modules when variable tests was not set.
if env_test.get('tests') is None:
    test_sources += Glob('Test*.hpp')
else:
    test_sources = Split(env_test['tests']) 

alltests = env_test.CxxTest('alltests', test_sources)

# test -- alias for executing unit tests.
test = env_test.Alias('test', alltests, alltests[0].abspath)
AlwaysBuild(test)

# vim: ft=python

dist: trusty
sudo: required

language: cpp

os:
  - linux
  - osx

env:
  - MYUSEMC=true MYPYTHON_VERSION=2.7
  - MYUSEMC=true MYPYTHON_VERSION=3.5
  - MYUSEMC=true MYPYTHON_VERSION=3.6
  - MYUSEMC=false

git:
  depth: 999999

branches:
  except:
    - /^v[0-9]/


before_install:
  - MYNAME=libdiffpy
  - MYCOMMIT="$(git rev-parse HEAD)"
    # travis virtual hosts have 2 cores as per https://goo.gl/DQy4oW
  - MYNCPU=2
  - umask 022
  - git fetch origin --tags
  - NOSYS=true; NOAPT=true; NOBREW=true; NOMC=true
  - if ${MYUSEMC}; then
        NOMC=false;
    elif [[ ${TRAVIS_OS_NAME} == linux ]]; then
        NOAPT=false; NOSYS=false;
        MYPIPFLAGS="--user";
    elif [[ ${TRAVIS_OS_NAME} == osx ]]; then
        NOBREW=false; NOSYS=false;
        MYPIPFLAGS="--user";
    fi
  - MYMCREPO=https://repo.continuum.io/miniconda
  - case ${TRAVIS_OS_NAME} in
    linux)
        MYMCBUNDLE=Miniconda2-latest-Linux-x86_64.sh ;;
    osx)
        MYMCBUNDLE=Miniconda2-latest-MacOSX-x86_64.sh ;;
    *)
        echo "Unsupported operating system." >&2;
        exit 2 ;;
    esac

  - mkdir -p ~/pkgs

  - $NOMC || pushd ~/pkgs
  - $NOMC || wget --timestamping ${MYMCREPO}/${MYMCBUNDLE}
  - $NOMC || test -x ~/mc/bin/conda || bash ${MYMCBUNDLE} -b -f -p ~/mc
  - $NOMC || popd
  - $NOMC || source ~/mc/bin/activate root
  - $NOMC || conda update --yes conda
  - $NOMC || conda install --yes conda-build jinja2
  - $NOMC || conda create --name=testenv --yes python=${MYPYTHON_VERSION}
  - $NOMC || conda config --add channels diffpy

  - $NOAPT || test "${TRAVIS_OS_NAME}" = "linux" || exit $?
  - $NOAPT || sudo apt-get update -qq
  - $NOAPT || sudo apt-get install -y
                  libgsl0-dev libboost-all-dev python-pip
                  build-essential scons cxxtest

  - $NOBREW || test "${TRAVIS_OS_NAME}" = "osx" || exit $?

    # Add homebrew site-packages to Python path.
  - $NOBREW || MYPYUSITE="${HOME}/Library/Python/2.7/lib/python/site-packages"
  - $NOBREW || MYPTHFILE="${MYPYUSITE}/homebrew.pth"
  - $NOBREW || MYPYBREW=/usr/local/lib/python2.7/site-packages
  - $NOBREW || mkdir -p "${MYPYUSITE}"
  - $NOBREW || echo "import site; site.addsitedir('$MYPYBREW')" > ${MYPTHFILE}

  - $NOBREW || brew update
  - $NOBREW || brew install gsl
  - $NOBREW || brew install scons
  - $NOBREW || brew install cxxtest
  - $NOBREW || export CXXTEST="$(brew --prefix cxxtest)"/libexec/bin/cxxtestgen

  - $NOSYS || scons sdist
  - $NOSYS || MYTARBUNDLE="$(ls -t "${PWD}"/*.tar.gz | head -1)"
  - $NOSYS || pushd ~/pkgs
  - $NOSYS || tar xzf "${MYTARBUNDLE}"
  - $NOSYS || git clone https://github.com/diffpy/libobjcryst.git
  - $NOSYS || popd


install:
  - $NOMC || conda build --python=${MYPYTHON_VERSION} conda-recipe
  - $NOMC || conda render --python=${MYPYTHON_VERSION} --output conda-recipe |
                sed 's,.*/,,; s/[.]tar[.]bz2$//; s/-/=/g' > /tmp/mypackage.txt
  - $NOMC || source activate root
  - $NOMC || conda build purge
  - $NOMC || source activate testenv
  - $NOMC || conda install --yes --use-local --file=/tmp/mypackage.txt
  - $NOMC || conda install --yes cxxtest scons
  - $NOMC || MYPREFIX="${HOME}/mc/envs/testenv"

  - MYSUDO=
  - $NOAPT || MYSUDO=sudo
  - $NOSYS || $MYSUDO scons -j $MYNCPU -C ~/pkgs/libobjcryst install
  - $NOSYS || cd ~/pkgs/"$(basename "${MYTARBUNDLE}" .tar.gz)"
  - $NOSYS || scons -j $MYNCPU build=fast lib
  - $NOSYS || $MYSUDO scons build=fast install
  - $NOSYS || scons -Q build=fast --clean lib
  - $NOSYS || MYPREFIX=/usr/local

  # Verify version of the installed library.
  - MYINCLUDE="${MYPREFIX}/include"
  - MYVERSION="${MYINCLUDE}/diffpy/version.hpp"
  - MYGIT_REV=$(grep '^#define DIFFPY_GIT_SHA' "$MYVERSION" | cut -d '"' -f 2)
  - if [[ "${MYCOMMIT}" != "${MYGIT_REV}" ]]; then
        echo "Version mismatch ${MYCOMMIT} vs ${MYGIT_REV}.";
        exit 1;
    fi

  # Mac OS X must use the same deployment target as conda-build.
  - if $MYUSEMC && [[ "${TRAVIS_OS_NAME}" == osx ]]; then
        export MACOSX_DEPLOYMENT_TARGET=10.7;
    fi

  - $NOMC || export MYPREFIX
  - $NOMC || cp .travis-sconscript.local sconscript.local
  - scons -j $MYNCPU build=fast prefix="${MYPREFIX}" test_installed=true alltests
  - MYALLTESTSFAST=$(ls -t ${PWD}/build/fast*/tests/alltests | head -1)
  - scons -j $MYNCPU build=debug lib alltests
  # APT and BREW jobs test builds from expanded source archive, but codecov
  # requires compilation from a git repository.  Tell scons to do so.
  - scons -j $MYNCPU -C $TRAVIS_BUILD_DIR build=coverage lib alltests


before_script:
  - $NOBREW || USER_BASE="$(python -c 'import site; print(site.USER_BASE)')"
  - $NOBREW || PATH="${USER_BASE}/bin:${PATH}"


script:
  - scons -Q build=debug test
  - scons -Q build=debug enable_objcryst=false test
  - ${MYALLTESTSFAST}
  - scons -j $MYNCPU -C $TRAVIS_BUILD_DIR build=coverage test


after_success:
  - cd $TRAVIS_BUILD_DIR
  - pip install $MYPIPFLAGS codecov
  - codecov
